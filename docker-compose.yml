networks:
  kafka-tier-multiple:
    driver: bridge

services:
  zookeeper1:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181'
      - '2888'
      - '3888'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_PORT_NUMBER=2181
      - ZOO_SERVER_ID=1
      - ZOO_SERVERS=0.0.0.0:2888:3888,zookeeper2:2888:3888,zookeeper3:2888:3888
    networks:
      - kafka-tier-multiple
  
  zookeeper2:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2182'
      - '2888'
      - '3888'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_PORT_NUMBER=2182
      - ZOO_SERVER_ID=2
      - ZOO_SERVERS=zookeeper1:2888:3888,0.0.0.0:2888:3888,zookeeper3:2888:3888
    networks:
      - kafka-tier-multiple
  
  zookeeper3:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2183'
      - '2888'
      - '3888'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOOKEEPER_PORT_NUMBER=2183
      - ZOO_SERVER_ID=3
      - ZOO_SERVERS=zookeeper1:2888:3888,zookeeper2:2888:3888,0.0.0.0:2888:3888
    networks:
      - kafka-tier-multiple 
  
  kafka1:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2182,zookeeper3:2183
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=CLIENT://:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka1:9092
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_CFG_NUM_PARTITIONS=1
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    networks:
      - kafka-tier-multiple

  kafka2:
    image: 'bitnami/kafka:latest'
    ports:
      - '9093'
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9093
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2182,zookeeper3:2183
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=CLIENT://:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka2:9093
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_CFG_NUM_PARTITIONS=1
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    networks:
      - kafka-tier-multiple

  kafka3:
    image: 'bitnami/kafka:latest'
    ports:
      - '9094'
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9094
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper1:2181,zookeeper2:2182,zookeeper3:2183
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=CLIENT://:9094
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka3:9094
      - KAFKA_CFG_DEFAULT_REPLICATION_FACTOR=3
      - KAFKA_CFG_NUM_PARTITIONS=1
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    networks:
      - kafka-tier-multiple

  init-kafka:
    image: 'bitnami/kafka:latest'
    depends_on:
      kafka1:
        condition: service_started
      kafka2:
        condition: service_started
      kafka3:
        condition: service_started
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      /opt/bitnami/kafka/bin/kafka-topics.sh --create --bootstrap-server kafka1:9092,kafka2:9093,kafka3:9094 --topic twitter
      /opt/bitnami/kafka/bin/kafka-topics.sh --describe --bootstrap-server kafka1:9092,kafka2:9093,kafka3:9094 --topic twitter
      echo -e 'list topics'
      /opt/bitnami/kafka/bin/kafka-topics.sh --list --bootstrap-server kafka1:9092,kafka2:9093,kafka3:9094
      "
    networks:
      - kafka-tier-multiple

  consumer-app:
    image: '4erpak/consumer-app:v1'
    depends_on:
      init-kafka:
        condition: service_completed_successfully
    networks:
      - kafka-tier-multiple

  twitter-app:
    image: '4erpak/twitter-app:v1'
    environment:
    - twitter_bearer_token=${TOKEN}
    depends_on:
      init-kafka:
        condition: service_completed_successfully
    networks:
      - kafka-tier-multiple

